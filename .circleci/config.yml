version: 2.1

jobs:
  test:
    docker:
      - image: cimg/node:20.2.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum  "package-lock.json" }}
            - v1-dependencies-
      - run: npm ci
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum  "package-lock.json" }}
      - run: mkdir ./.test-results
      - run:
          name: Run tests
          command: npm run test:ci
      - store_test_results:
          path: ./.test-results
      - persist_to_workspace:
          root: .
          paths:
            - .git
            - src
            - node_modules
            - package.json
            - package-lock.json
            - README.md
            - LICENSE
            - tsconfig.json
            - tsconfig.prod.json
  build:
    docker:
      - image: cimg/node:20.2.0
    steps:
      - attach_workspace:
          at: .
      - run: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - package.json
            - README.md
            - LICENSE
  get-bump-type:
    docker:
      - image: cimg/node:20.2.0
    steps:
      - attach_workspace:
          at: .
      - run: echo "export BUMP_TYPE=$(git log -1 --pretty=%B | grep -Eo '\[(major|minor|patch)\]$' |  sed 's/[][]//g')" >> $BASH_ENV
      - run: echo 'export BUMP_TYPE="${BUMP_TYPE:-patch}"' >> $BASH_ENV
      - run: echo ${BUMP_TYPE}
  bump-version:
    docker:
      - image: cimg/node:20.2.0
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Avoid hosts unknown for github
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: Bump version
          command: |
            echo ${BUMP_TYPE}
            npm version ${BUMP_TYPE}
            git push --follow-tags
  publish:
    docker:
      - image: cimg/node:20.2.0
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Publish to NPM
          command: |
            npm set //registry.npmjs.org/:_authToken=${NPM_TOKEN}
            npm publish

workflows:
  workflow:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: main
      - get-bump-type:
          requires:
            - test
          filters:
            branches:
              only: main
      - bump-version:
          requires:
            - build
            - get-bump-type
          filters:
            branches:
              only: main
      - publish:
          requires:
            - build
            - bump-version
